import{Matrix4 as r,Cartographic as t,Rectangle as i,Cartesian3 as e,Transforms as a,createGuid as o}from"terriajs-cesium";import s from"terriajs/lib/Models/BoxDrawing";import n from"terriajs/lib/Models/Catalog/CatalogMemberFactory";import m from"terriajs/lib/Models/Definition/CommonStrata";import l from"terriajs/lib/Models/Definition/CreateModel";import"terriajs/lib/Models/Terria";import p from"terriajs/lib/Models/UserDrawing";import d from"terriajs/lib/Models/ViewerMode";import"terriajs/lib/ReactViewModels/ViewState";import c from"terriajs/lib/ViewModels/MapNavigation/MapNavigationItemController";import"terriajs/lib/Traits/Decorators/anyTrait";import"terriajs/lib/Traits/Decorators/modelReferenceArrayTrait";import"terriajs/lib/Traits/Decorators/modelReferenceTrait";import"terriajs/lib/Traits/Decorators/objectArrayTrait";import"terriajs/lib/Traits/Decorators/objectTrait";import b from"terriajs/lib/Traits/Decorators/primitiveArrayTrait";import"terriajs/lib/Traits/Decorators/primitiveTrait";import T from"terriajs/lib/Traits/mixTraits";import"terriajs/lib/Traits/ModelTraits";import f from"terriajs/lib/Traits/TraitsClasses/CatalogMemberTraits";import"terriajs/lib/Traits/TraitsClasses/HeadingPitchRollTraits";import"terriajs/lib/Traits/TraitsClasses/LatLonHeightTraits";import M from"terriajs/lib/Traits/TraitsClasses/MappableTraits";import"terriajs/lib/Traits/TraitsClasses/TransformationTraits";import x from"terriajs/lib/ModelMixins/CatalogMemberMixin";import u from"terriajs/lib/ModelMixins/MappableMixin";import"terriajs/lib/ModelMixins/TableMixin";import"terriajs/lib/Styled/Box";import g from"terriajs/lib/Styled/Icon";import{__decorate as w}from"tslib";import{computed as h}from"mobx";class j extends(T(M,f)){}w([b({name:"Transformation matrix",description:"Transformation matrix that positions the box on the globe.",type:"number"})],j.prototype,"transformationMatrix",void 0);class v extends(x(u(l(j)))){constructor(){super(...arguments),this.type=v.type}forceLoadMapItems(){return Promise.resolve()}get mapItems(){var r;const t=null===(r=this.boxDrawing)||void 0===r?void 0:r.dataSource;return t?(t.show=this.show,[t]):[]}get boxDrawing(){const r=this.terria.cesium,t=this.cesiumTransformationMatrix;if(void 0!==r&&void 0!==t){return new s(r,t,{keepBoxAboveGround:!0})}}get cesiumTransformationMatrix(){const t=this.transformationMatrix;if(void 0!==t)return r.fromArray([...t])}setBoxTransformationFromRectangle(o){const s=t.toCartesian(i.center(o)),n=e.fromRadians(o.west,o.north),l=e.fromRadians(o.west,o.south),p=e.fromRadians(o.east,o.north),d=e.distance(n,l),c=e.distance(n,p),b=new e(c,d,Math.min(c,d)),T=r.fromScale(b),f=a.eastNorthUpToFixedFrame(s);r.multiply(f,T,f),this.setTrait(m.user,"transformationMatrix",r.toArray(f))}}v.type="box-drawing",w([h],v.prototype,"mapItems",null),w([h],v.prototype,"boxDrawing",null),w([h],v.prototype,"cesiumTransformationMatrix",null),n.register(v.type,v);class D extends c{constructor(r){super(),this.terria=r,this.glyph=g.GLYPHS.cube,this.viewerMode=d.Cesium,this.userDrawing=new p({terria:r,messageHeader:"Click two points to draw a 3D box",drawRectangle:!0,onDrawingComplete:({rectangle:r})=>{if(r){const t=this.create3dBox(r);this.terria.addModel(t),this.terria.workbench.add(t)}this.deactivate()}})}activate(){this.userDrawing.enterDrawMode(),super.activate()}deactivate(){this.userDrawing.endDrawing(),super.deactivate()}create3dBox(r){const t=new v(o(),this.terria);return t.setBoxTransformationFromRectangle(r),t.setTrait(m.user,"name","Box"),t}}const y={name:"Sample plugin",description:"A sample terria plugin that adds a tool for drawing a 3d box.",version:"0.0.1",register({viewState:r}){var t;(t=r.terria).mapNavigationModel.addItem({id:"draw-box-button",name:"Draw a 3D box",location:"TOP",screenSize:void 0,order:10,controller:new D(t)})}};export{y as default};
